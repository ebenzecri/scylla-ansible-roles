---
- name: Change owner and group for 'data' directory
  ansible.builtin.file:
    path: "{{ scylla_monitoring_prometheus_data_path }}"
    state: directory
    mode: '1755'
    recurse: yes
    owner: "nobody"
    group: "nogroup"
  become: true
  when: run_docker_with_sudo is defined and run_docker_with_sudo|bool == True

- name: Populate service facts
  service_facts:

- name: restart the docker daemon again
  service:
    name: docker
    state: restarted
    enabled: yes
  become: true
  when: ansible_facts.services["docker.service"] is defined

- name: update docker.sock permissions to work around the restart issue
  file:
    path: /var/run/docker.sock
    owner: root
    group: root
    mode: '0666'
  become: true
  when: ansible_facts.services["docker.service"] is defined

- set_fact:
    monitoring_cql_username: "{{ item.split('=')[0] }}"
    monitoring_cql_password: "{{ item.split('=')[1] }}"
  when: "'cql_credentials' in groups and item.split('=')[0] == scylla_monitoring_cql_default_user | default('scylla_cql_monitor')"
  loop: "{{ groups['cql_credentials'] }}"

- name: "Copy 'start_scylla_monitoring_{{ scylla_monitoring_version | replace('.', '_') }}.sh'"
  ansible.builtin.template:
    src: templates/start_scylla_monitoring.j2
    dest: "{{ scylla_monitoring_installation_path }}/start_scylla_monitoring_{{ scylla_monitoring_version | replace('.', '_') }}.sh"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: '0755'
  register: start_scylla_monitoring_script
  become: true

- name: Start monitoring
  block:
  - name: ensure monitoring is stopped
    shell: |
      cd {{ base_dir }}
      ./kill-all.sh
      sudo ./kill-all.sh

  - name: start scylla-monitoring
    ansible.builtin.shell: "{{ start_scylla_monitoring_script.dest }}"
    ignore_errors: true

  # Workaround for potential inner networking issue under docker
  - name: Stop monitoring again
    shell: |
      cd {{ base_dir }}
      ./kill-all.sh
      sudo ./kill-all.sh

  - name: Restart the docker service
    service:
      name: docker
      state: restarted
    become: true

  - name: Start Scylla Monitoring stack
    ansible.builtin.shell: "{{ start_scylla_monitoring_script.dest }}"
  environment:
    SCYLLA_USER: "{% if monitoring_cql_username is defined and monitoring_cql_password is defined %}{{ monitoring_cql_username }}{% endif %}"
    SCYLLA_PSSWD: "{% if monitoring_cql_username is defined and monitoring_cql_password is defined %}{{ monitoring_cql_password }}{% endif %}"
  when:
    - run_docker_with_sudo is defined and run_docker_with_sudo|bool == False or
      run_docker_with_sudo is not defined

- name: Start monitoring
  block:
  - name: ensure monitoring is stopped
    shell: |
      cd {{ base_dir }}
      ./kill-all.sh
    become: true

  - name: start scylla-monitoring
    ansible.builtin.shell: "{{ start_scylla_monitoring_script.dest }}"
    ignore_errors: true
    become: true

  # Workaround for potential inner networking issue under docker
  - name: Stop monitoring again
    shell: |
      cd {{ base_dir }}
      ./kill-all.sh
    become: true

  - name: Restart the docker service
    service:
      name: docker
      state: restarted
    become: true

  - name: start scylla-monitoring
    ansible.builtin.shell: "{{ start_scylla_monitoring_script.dest }}"
    become: true
  environment:
    SCYLLA_USER: "{% if monitoring_cql_username is defined and monitoring_cql_password is defined %}{{ monitoring_cql_username }}{% endif %}"
    SCYLLA_PSSWD: "{% if monitoring_cql_username is defined and monitoring_cql_password is defined %}{{ monitoring_cql_password }}{% endif %}"
  when: run_docker_with_sudo is defined and run_docker_with_sudo|bool == True
